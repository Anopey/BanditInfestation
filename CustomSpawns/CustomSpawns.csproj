<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net472</TargetFramework>
        <Platforms>x64</Platforms>
        <LangVersion>9.0</LangVersion>
        <Nullable>enable</Nullable>
        <Configurations>Api_Stable_Debug;Api_Stable_Release;Api_Beta_Debug;Api_Beta_Release;Stable_Debug;Stable_Release;Beta_Debug;Beta_Release</Configurations>
    </PropertyGroup>

    <PropertyGroup>
        <ModuleName>CustomSpawns</ModuleName>
        <DisplayName>Custom Spawns</DisplayName>
        <AssemblyName>$(ModuleName)</AssemblyName>
    </PropertyGroup>

    <PropertyGroup Condition="$(Configuration.StartsWith('Api'))">
        <DefineConstants>$(DefineConstants);API_MODE</DefineConstants>
        <ModuleName>CustomSpawnsCleanAPI</ModuleName>
        <DisplayName>CustomSpawns Clean API</DisplayName>
    </PropertyGroup>

    <!-- NuGet Packages -->
    <ItemGroup>
        <PackageReference Include="Bannerlord.BuildResources" Version="$(BuildResourcesVersion)">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Lib.Harmony" Version="$(HarmonyVersion)" PrivateAssets="All" />

        <PackageReference Include="Bannerlord.ReferenceAssemblies.Core.EarlyAccess" Version="$(GameVersion).*" PrivateAssets="All" />
        <PackageReference Include="Bannerlord.ReferenceAssemblies.Native.EarlyAccess" Version="$(GameVersion).*" PrivateAssets="All" />
        <PackageReference Include="Bannerlord.ReferenceAssemblies.StoryMode.EarlyAccess" Version="$(GameVersion).*" PrivateAssets="All" />
        <PackageReference Include="Bannerlord.ReferenceAssemblies.Sandbox.EarlyAccess" Version="$(GameVersion).*" PrivateAssets="All" />
        <Reference Include="System.Windows.Forms" />
    </ItemGroup>

    <Target Name="Setup CustomSpawnCleanAPI in game folder" AfterTargets="Build" Condition="$(Configuration.StartsWith('Api'))">
        <CopyFolder FromDirectory="$(ProjectDir)\..\$(ModuleName)\_Module" ToDirectory="$(GameFolder)/Modules/$(ModuleName)" Regex="^.*$" Clean="true" />
        <ReplaceFileText Condition="'@(SubModuleOverrides-&gt;Count())' &gt; 0" File="$(GameFolder)/Modules/$(ModuleName)/SubModule.xml" Regex="%(SubModuleOverrides.Regex)" ReplacementText="%(SubModuleOverrides.Replacement)" />
        <RemoveDir Directories="$(GameFolder)\Modules\$(ModuleName)\ModuleData\Data" />
    </Target>

    <!-- Extra Substitution Variables to Use in SubModule.xml -->
    <ItemGroup>
        <SubModuleOverrides Include="DisplayName">
            <Regex>\$displayname\$</Regex>
            <Replacement>$(DisplayName)</Replacement>
        </SubModuleOverrides>
    </ItemGroup>
    <ItemGroup>
      <Content Include="..\CustomSpawnsCleanAPI\_Module\ModuleData\config.xml">
        <Link>CustomSpawnsCleanAPI\_Module\ModuleData\config.xml</Link>
      </Content>
      <Content Include="..\CustomSpawnsCleanAPI\_Module\ModuleData\custom_spawns_campaign_data_config.xml">
        <Link>CustomSpawnsCleanAPI\_Module\ModuleData\custom_spawns_campaign_data_config.xml</Link>
      </Content>
      <Content Include="..\CustomSpawnsCleanAPI\_Module\Schema\PartyRewardTemplateSchema.xsd">
        <Link>CustomSpawnsCleanAPI\_Module\Schema\PartyRewardTemplateSchema.xsd</Link>
      </Content>
      <Content Include="..\CustomSpawnsCleanAPI\_Module\SubModule.xml">
        <Link>CustomSpawnsCleanAPI\_Module\SubModule.xml</Link>
      </Content>
    </ItemGroup>
    <ItemGroup>
      <Folder Include="PrisonerRecruitment" />
    </ItemGroup>

</Project>